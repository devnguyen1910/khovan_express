#!/usr/bin/env node

/**
 * MongoDB Database Seeding Script for Kho V·∫≠n Express
 * Run this script to populate the database with sample Vietnamese data
 */

import mongoose from 'mongoose';
import { config } from '../src/config/index.js';
import { Inventory } from '../src/models/Inventory.js';
import { Shipment } from '../src/models/Shipment.js';
import { Supplier } from '../src/models/Supplier.js';

// Sample data with Vietnamese content
const inventoryData = [
  {
    name: 'M√°y t√≠nh x√°ch tay Dell Latitude 5520',
    description: 'M√°y t√≠nh x√°ch tay d√†nh cho doanh nghi·ªáp v·ªõi chip Intel Core i7, RAM 16GB, SSD 512GB',
    sku: 'DELL-LAT-5520-001',
    category: 'ƒêi·ªán t·ª≠',
    quantity: 25,
    unit: 'Chi·∫øc',
    unitPrice: 15000000,
    location: 'Kho A-01-005',
    supplier: 'Dell Technologies Vietnam',
    status: 'C√≥ s·∫µn',
    minStockLevel: 5,
    maxStockLevel: 50
  },
  {
    name: 'B√†n vƒÉn ph√≤ng g·ªó c√¥ng nghi·ªáp ch·ªØ L',
    description: 'B√†n l√†m vi·ªác ch·ªØ L v·ªõi 3 ngƒÉn k√©o, k√≠ch th∆∞·ªõc 140x120x75cm',
    sku: 'DESK-WD-L140-001',
    category: 'N·ªôi th·∫•t',
    quantity: 50,
    unit: 'Chi·∫øc',
    unitPrice: 2500000,
    location: 'Kho B-12-020',
    supplier: 'N·ªôi Th·∫•t H√≤a Ph√°t',
    status: 'C√≥ s·∫µn',
    minStockLevel: 10,
    maxStockLevel: 100
  },
  {
    name: 'ƒêi·ªán tho·∫°i Samsung Galaxy S24 Ultra',
    description: 'Smartphone cao c·∫•p v·ªõi camera AI 200MP, m√†n h√¨nh Dynamic AMOLED 6.8 inch',
    sku: 'SAMSUNG-S24U-512GB',
    category: 'ƒêi·ªán t·ª≠',
    quantity: 5,
    unit: 'Chi·∫øc',
    unitPrice: 30000000,
    location: 'Kho A-05-003',
    supplier: 'Samsung Electronics Vietnam',
    status: 'S·∫Øp h·∫øt',
    minStockLevel: 3,
    maxStockLevel: 20
  },
  {
    name: 'Gh·∫ø vƒÉn ph√≤ng ergonomic',
    description: 'Gh·∫ø xoay c√≥ t·ª±a l∆∞ng, tay v·ªãn ƒëi·ªÅu ch·ªânh, ch√¢n nh√¥m 5 c√°nh',
    sku: 'CHAIR-ERGO-BK001',
    category: 'N·ªôi th·∫•t',
    quantity: 75,
    unit: 'Chi·∫øc',
    unitPrice: 1200000,
    location: 'Kho B-08-015',
    supplier: 'N·ªôi Th·∫•t H√≤a Ph√°t',
    status: 'C√≥ s·∫µn',
    minStockLevel: 15,
    maxStockLevel: 100
  },
  {
    name: 'M√°y in laser HP LaserJet Pro',
    description: 'M√°y in laser ƒëen tr·∫Øng t·ªëc ƒë·ªô cao 28 trang/ph√∫t',
    sku: 'HP-LJ-PRO-M404N',
    category: 'ƒêi·ªán t·ª≠',
    quantity: 0,
    unit: 'Chi·∫øc',
    unitPrice: 4500000,
    location: 'Kho A-03-007',
    supplier: 'HP Vietnam',
    status: 'H·∫øt h√†ng',
    minStockLevel: 2,
    maxStockLevel: 15
  }
];

const suppliersData = [
  {
    name: 'Dell Technologies Vietnam',
    contactPerson: 'Nguy·ªÖn Th√†nh Long',
    email: 'long.nguyen@dell.com.vn',
    phone: '024 3943 1234',
    address: 'T·∫ßng 15, Keangnam Landmark 72, Ph·∫°m H√πng, Nam T·ª´ Li√™m, H√† N·ªôi',
    category: 'ƒêi·ªán t·ª≠',
    status: 'Ho·∫°t ƒë·ªông',
    paymentTerms: '30 ng√†y',
    deliveryTime: '7-14 ng√†y',
    rating: 4.8,
    totalOrders: 125,
    totalValue: 1875000000
  },
  {
    name: 'N·ªôi Th·∫•t H√≤a Ph√°t',
    contactPerson: 'Tr·∫ßn Minh H·∫£i',
    email: 'hai.tran@hoaphat.com.vn',
    phone: '024 3876 5432',
    address: '66 Nguy·ªÖn Du, Hai B√† Tr∆∞ng, H√† N·ªôi',
    category: 'N·ªôi th·∫•t',
    status: 'Ho·∫°t ƒë·ªông',
    paymentTerms: '15 ng√†y',
    deliveryTime: '3-7 ng√†y',
    rating: 4.5,
    totalOrders: 89,
    totalValue: 445000000
  },
  {
    name: 'Samsung Electronics Vietnam',
    contactPerson: 'Park Min Soo',
    email: 'minsoo.park@samsung.vn',
    phone: '028 3821 9876',
    address: 'T·∫ßng 8, Bitexco Financial Tower, 2 H·∫£i Tri·ªÅu, Qu·∫≠n 1, TP.HCM',
    category: 'ƒêi·ªán t·ª≠',
    status: 'Ho·∫°t ƒë·ªông',
    paymentTerms: '45 ng√†y',
    deliveryTime: '5-10 ng√†y',
    rating: 4.9,
    totalOrders: 76,
    totalValue: 1672000000
  },
  {
    name: 'HP Vietnam',
    contactPerson: 'L√™ Th·ªã Minh Ch√¢u',
    email: 'chau.le@hp.com',
    phone: '028 3827 4567',
    address: 'T·∫ßng 10, T√≤a nh√† Vietcombank, 5 C√¥ng Tr∆∞·ªùng M√™ Linh, Qu·∫≠n 1, TP.HCM',
    category: 'ƒêi·ªán t·ª≠',
    status: 'Ho·∫°t ƒë·ªông',
    paymentTerms: '30 ng√†y',
    deliveryTime: '10-15 ng√†y',
    rating: 4.3,
    totalOrders: 45,
    totalValue: 202500000
  }
];

const shipmentsData = [
  {
    trackingNumber: 'KVE240001',
    origin: {
      name: 'Kho V·∫≠n Express - H√† N·ªôi',
      address: '123 ƒê∆∞·ªùng L√°ng, ƒê·ªëng ƒêa, H√† N·ªôi',
      phone: '024 3851 2345'
    },
    destination: {
      name: 'C√¥ng ty TNHH ABC Tech',
      address: '456 Nguy·ªÖn Tr√£i, Thanh Xu√¢n, H√† N·ªôi',
      phone: '024 3564 7890'
    },
    items: [
      {
        name: 'M√°y t√≠nh x√°ch tay Dell Latitude 5520',
        quantity: 2,
        weight: 5.6,
        value: 30000000
      }
    ],
    status: 'ƒêang v·∫≠n chuy·ªÉn',
    priority: 'Cao',
    estimatedDelivery: new Date('2024-12-25'),
    totalWeight: 5.6,
    totalValue: 30000000,
    shippingCost: 250000,
    notes: 'Giao h√†ng trong gi·ªù h√†nh ch√≠nh'
  },
  {
    trackingNumber: 'KVE240002',
    origin: {
      name: 'Kho V·∫≠n Express - TP.HCM',
      address: '789 Nguy·ªÖn VƒÉn C·ª´, Qu·∫≠n 5, TP.HCM',
      phone: '028 3835 1234'
    },
    destination: {
      name: 'Kh√°ch h√†ng Nguy·ªÖn VƒÉn A',
      address: '321 L√™ VƒÉn S·ªπ, Qu·∫≠n 3, TP.HCM',
      phone: '0901 234 567'
    },
    items: [
      {
        name: 'B√†n vƒÉn ph√≤ng g·ªó c√¥ng nghi·ªáp ch·ªØ L',
        quantity: 1,
        weight: 25.0,
        value: 2500000
      }
    ],
    status: 'ƒê√£ giao',
    priority: 'Trung b√¨nh',
    estimatedDelivery: new Date('2024-12-22'),
    actualDelivery: new Date('2024-12-21'),
    totalWeight: 25.0,
    totalValue: 2500000,
    shippingCost: 350000,
    notes: 'ƒê√£ giao th√†nh c√¥ng, kh√°ch h√†ng h√†i l√≤ng'
  },
  {
    trackingNumber: 'KVE240003',
    origin: {
      name: 'Kho V·∫≠n Express - ƒê√† N·∫µng',
      address: '99 Tr·∫ßn Ph√∫, H·∫£i Ch√¢u, ƒê√† N·∫µng',
      phone: '0236 3123 456'
    },
    destination: {
      name: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc B√°ch Khoa ƒê√† N·∫µng',
      address: '54 Nguy·ªÖn L∆∞∆°ng B·∫±ng, Li√™n Chi·ªÉu, ƒê√† N·∫µng',
      phone: '0236 3842 308'
    },
    items: [
      {
        name: 'Gh·∫ø vƒÉn ph√≤ng ergonomic',
        quantity: 20,
        weight: 240.0,
        value: 24000000
      }
    ],
    status: 'Ch·ªù x·ª≠ l√Ω',
    priority: 'Th·∫•p',
    estimatedDelivery: new Date('2024-12-28'),
    totalWeight: 240.0,
    totalValue: 24000000,
    shippingCost: 800000,
    notes: 'Giao h√†ng theo l·ªãch h·∫πn v·ªõi tr∆∞·ªùng'
  }
];

async function seedDatabase() {
  try {
    console.log('üåæ B·∫Øt ƒë·∫ßu seeding database...');
    
    // Connect to MongoDB
    await mongoose.connect(config.mongoUri);
    console.log('‚úÖ ƒê√£ k·∫øt n·ªëi MongoDB');

    // Clear existing data
    console.log('üóëÔ∏è  X√≥a d·ªØ li·ªáu c≈©...');
    await Promise.all([
      Inventory.deleteMany({}),
      Supplier.deleteMany({}),
      Shipment.deleteMany({})
    ]);

    // Insert suppliers first (referenced by inventory)
    console.log('üì¶ Th√™m d·ªØ li·ªáu nh√† cung c·∫•p...');
    const suppliers = await Supplier.insertMany(suppliersData);
    console.log(`‚úÖ ƒê√£ th√™m ${suppliers.length} nh√† cung c·∫•p`);

    // Insert inventory
    console.log('üì¶ Th√™m d·ªØ li·ªáu kho h√†ng...');
    const inventory = await Inventory.insertMany(inventoryData);
    console.log(`‚úÖ ƒê√£ th√™m ${inventory.length} s·∫£n ph·∫©m v√†o kho`);

    // Insert shipments
    console.log('üöö Th√™m d·ªØ li·ªáu v·∫≠n chuy·ªÉn...');
    const shipments = await Shipment.insertMany(shipmentsData);
    console.log(`‚úÖ ƒê√£ th√™m ${shipments.length} ƒë∆°n v·∫≠n chuy·ªÉn`);

    // Create indexes
    console.log('üîç T·∫°o indexes...');
    await Promise.all([
      Inventory.collection.createIndex({ sku: 1 }, { unique: true }),
      Inventory.collection.createIndex({ category: 1 }),
      Inventory.collection.createIndex({ status: 1 }),
      Inventory.collection.createIndex({ name: 'text', description: 'text' }),
      
      Supplier.collection.createIndex({ name: 1 }, { unique: true }),
      Supplier.collection.createIndex({ email: 1 }, { unique: true }),
      Supplier.collection.createIndex({ category: 1 }),
      
      Shipment.collection.createIndex({ trackingNumber: 1 }, { unique: true }),
      Shipment.collection.createIndex({ status: 1 }),
      Shipment.collection.createIndex({ priority: 1 }),
      Shipment.collection.createIndex({ createdAt: -1 })
    ]);
    console.log('‚úÖ ƒê√£ t·∫°o indexes');

    console.log('\nüéâ Database seeding ho√†n th√†nh!');
    console.log(`üìä T·ªïng k·∫øt:`);
    console.log(`   - ${suppliers.length} nh√† cung c·∫•p`);
    console.log(`   - ${inventory.length} s·∫£n ph·∫©m kho`);
    console.log(`   - ${shipments.length} ƒë∆°n v·∫≠n chuy·ªÉn`);
    
  } catch (error) {
    console.error('‚ùå L·ªói khi seeding database:', error);
    process.exit(1);
  } finally {
    await mongoose.connection.close();
    console.log('üëã ƒê√£ ƒë√≥ng k·∫øt n·ªëi database');
    process.exit(0);
  }
}

// Run seeding
seedDatabase();